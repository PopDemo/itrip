<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>itrip-backend</artifactId>
        <groupId>cn.itrip</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>itrip-search</artifactId>
    <packaging>war</packaging>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
        <asciidoctor.input.directory>${project.basedir}/docs/asciidoc</asciidoctor.input.directory>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc</generated.asciidoc.directory>
        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>cn.itrip</groupId>
            <artifactId>itrip-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>5.3.1</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.4.0</version>
        </dependency>
    </dependencies>


<!--    <build>-->
<!--        <finalName>itrip-search</finalName>-->
<!--        <plugins>-->
<!--            &lt;!&ndash;Maven通过Maven Surefire Plugin插件执行单元测试&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <testFailureIgnore>true</testFailureIgnore>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash; Run the generated asciidoc through Asciidoctor to generate-->
<!--                 other documentation types, such as PDFs or HTML5 &ndash;&gt;-->
<!--            &lt;!&ndash;通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.asciidoctor</groupId>-->
<!--                <artifactId>asciidoctor-maven-plugin</artifactId>-->
<!--                <version>1.5.3</version>-->
<!--                &lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
<!--                &lt;!&ndash;生成PDF&ndash;&gt;-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.asciidoctor</groupId>-->
<!--                        <artifactId>asciidoctorj-pdf</artifactId>-->
<!--                        <version>1.5.0-alpha.14</version>-->
<!--                    </dependency>-->

<!--                    &lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
<!--                    <dependency>-->
<!--                        <groupId>org.jruby</groupId>-->
<!--                        <artifactId>jruby-complete</artifactId>-->
<!--                        <version>1.7.21</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->

<!--                &lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
<!--                &lt;!&ndash;文档生成配置&ndash;&gt;-->
<!--                <configuration>-->
<!--                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>-->
<!--                    <sourceDocumentName>index.adoc</sourceDocumentName>-->
<!--                    <attributes>-->
<!--                        <doctype>book</doctype>-->
<!--                        <toc>left</toc>-->
<!--                        <toclevels>3</toclevels>-->
<!--                        <numbered></numbered>-->
<!--                        <hardbreaks></hardbreaks>-->
<!--                        <sectlinks></sectlinks>-->
<!--                        <sectanchors></sectanchors>-->
<!--                        <generated>${generated.asciidoc.directory}</generated>-->
<!--                    </attributes>-->
<!--                </configuration>-->
<!--                &lt;!&ndash; Since each execution can only handle one backend, run-->
<!--                   separate executions for each desired output type &ndash;&gt;-->
<!--                &lt;!&ndash;因为每次执行只能处理一个后端，所以对于每个想要的输出类型，都是独立分开执行&ndash;&gt;-->
<!--                <executions>-->
<!--                    &lt;!&ndash;html5&ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>output-html</id>-->
<!--                        <phase>test</phase>-->
<!--                        <goals>-->
<!--                            <goal>process-asciidoc</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <backend>html5</backend>-->
<!--                            <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->


</project>
